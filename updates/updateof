#!/bin/bash
exec 1> >(tee -a /var/log/updateof.log) 2>&1
TODAY=$(date)
echo "-----------------------------------------------------"
echo "Date:	     $TODAY"
echo "-----------------------------------------------------"

THISUSER=$(whoami)
    if [ $THISUSER != 'root' ]
        then
            echo 'You must use sudo to run this script, sorry!'
            exit  1
    fi

## Fix Pi-hole should IP address have been changed
#echo ""
#echo "Pi-hole:"
ip=$(/sbin/ip -o -4 addr list eth0 | awk '{print $4}' | cut -d/ -f1)
sed -i 's/IPV4_ADDRESS.*/IPV4_ADDRESS='\$ip'\/24/' /etc/pihole/setupVars.conf
service pihole-FTL restart
pihole -g -sd

## Pip Apps
echo ""
echo "Home-Assistant:"
sudo -H pip3 install --upgrade homeassistant
echo ""
echo "Mopidy-Mopify:"
sudo -H pip install --upgrade Mopidy
echo ""
echo "Mopidy-Mopify:"
sudo -H pip install --upgrade Mopidy-Mopify
echo ""
echo "Mopidy-Moped:"
sudo -H pip install --upgrade Mopidy-Moped
echo ""
echo "Mopidy-Spotmop:"
sudo -H pip install --upgrade Mopidy-Spotmop
echo ""
echo "pafy:"
sudo -H pip install --upgrade pafy
echo ""
echo "Mopidy-WebSettings"
sudo -H pip install --upgrade Mopidy-WebSettings

## Create Download dirs when mounted to a network share
cd /opt/openflixr
echo ""
echo "create download dirs:"
sudo bash createdirs

## Git Apps
echo ""
echo "OpenFLIXR Wizard Update:"
cd /usr/share/nginx/html/setup
git reset --hard
git pull
echo ""
echo "OpenFLIXR Landing Page:"
cd /usr/share/nginx/html/openflixr
git reset --hard
git pull
echo ""
echo "CouchPotato:"
cd /opt/CouchPotato
git pull
/usr/sbin/service couchpotato restart
echo ""
echo "Headphones:"
cd /opt/headphones
git pull
/usr/sbin/service headphones restart
echo ""
echo "HTPC Manager:"
cd /opt/HTPCManager
git pull
/usr/sbin/service htpcmanager stop
sleep 3
/usr/sbin/service htpcmanager start
echo ""
echo "Mylar:"
cd /opt/Mylar
git pull
/usr/sbin/service mylar restart
echo ""
echo "Plexpy:"
cd /opt/plexpy
git pull
/usr/sbin/service plexpy restart
echo ""
echo "SickRage:"
cd /opt/sickrage
git fetch --all
git reset --hard origin/master
git pull origin master
echo ""
echo "Letsencrypt:"
cd /opt/letsencrypt
git reset --hard
git pull
echo ""
echo "AutoSub:"
cd /opt/autosub
git pull
/usr/sbin/service autosub restart
echo ""
echo "ComicReader:"
cd /var/lib/plexmediaserver/Library/Application\ Support/Plex\ Media\ Server/Plug-ins/ComicReader.bundle
git pull
echo ""
echo "PlexRequestChannel:"
cd /var/lib/plexmediaserver/Library/Application\ Support/Plex\ Media\ Server/Plug-ins/PlexRequestChannel.bundle
git pull
echo ""
echo "Sub-Zero:"
cd /var/lib/plexmediaserver/Library/Application\ Support/Plex\ Media\ Server/Plug-ins/
rm -rf Sub-Zero.bundle
git clone https://github.com/pannal/Sub-Zero.bundle
/usr/sbin/service plexmediaserver restart
echo ""
echo "WebTools:"
cd /var/lib/plexmediaserver/Library/Application\ Support/Plex\ Media\ Server/Plug-ins/WebTools.bundle
git pull
echo ""
echo "Groovy:"
cd /opt/groovy
git pull
echo ""
echo "NZBhydra:"
cd /opt/nzbhydra
git pull
echo ""
echo "LazyLibrarian:"
cd /opt/LazyLibrarian
git reset --hard
git pull
echo ""
echo "Plexupdate:"
cd /opt/plexupdate
git pull
echo ""
echo "Cleanup:"
rm /usr/share/nginx/html/setup/setup.sh 2> /dev/null
echo ""
echo "Network Hang fix:"
/sbin/ethtool -K eth0 gso off gro off tso off
echo ""
echo "Set Version"
version=$(crudini --get /usr/share/nginx/html/setup/config.ini custom custom1)
sed -i 's/Version.*/Version '$version'<\/span>/' /usr/share/nginx/html/openflixr/index.html

## User script
bash /opt/openflixr/userscript.sh
