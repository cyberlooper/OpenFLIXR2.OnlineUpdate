#!/bin/bash
exec 1> >(tee -a /var/log/updateof.log) 2>&1
TODAY=$(date)
printf "-----------------------------------------------------"
printf "Date:	     $TODAY"
printf "-----------------------------------------------------"

THISUSER=$(whoami)
    if [ $THISUSER != 'root' ]
        then
            printf 'You must use sudo to run this script, sorry!'
            exit  1
    fi

## Pip Apps
printf "\n Home-Assistant:"
sudo -H pip3 install --upgrade homeassistant
printf "\n Mopidy-Mopify:"
sudo -H pip install --upgrade Mopidy
printf "\n Mopidy-Mopify:"
sudo -H pip install --upgrade Mopidy-Mopify
printf "\n Mopidy-Moped:"
sudo -H pip install --upgrade Mopidy-Moped
printf "\n Mopidy-Spotmop:"
sudo -H pip install --upgrade Mopidy-Spotmop
printf "\n pafy:"
sudo -H pip install --upgrade pafy
printf "\n Mopidy-WebSettings"
sudo -H pip install --upgrade Mopidy-WebSettings

## Create Download dirs when mounted to a network share
cd /opt/openflixr
printf "\n create download dirs:"
sudo bash createdirs

## Git Apps
printf "\n OpenFLIXR Wizard Update:"
cd /usr/share/nginx/html/setup
git reset --hard
git pull
printf "\n OpenFLIXR Landing Page:"
cd /usr/share/nginx/html/openflixr
git reset --hard
git pull
printf "\n CouchPotato:"
cd /opt/CouchPotato
git pull
/usr/sbin/service couchpotato restart
printf "\n Headphones:"
cd /opt/headphones
git pull
/usr/sbin/service headphones restart
printf "\n HTPC Manager:"
cd /opt/HTPCManager
git pull
/usr/sbin/service htpcmanager stop
sleep 3
/usr/sbin/service htpcmanager start
printf "\n Mylar:"
cd /opt/Mylar
git pull
/usr/sbin/service mylar restart
printf "\n Plexpy:"
cd /opt/plexpy
git pull
/usr/sbin/service plexpy restart
printf "\n SickRage:"
cd /opt/sickrage
git fetch --all
git reset --hard origin/master
git pull origin master
printf "\n Letsencrypt:"
cd /opt/letsencrypt
git reset --hard
git pull
printf "\n AutoSub:"
cd /opt/autosub
git pull
/usr/sbin/service autosub restart
printf "\n ComicReader:"
cd /var/lib/plexmediaserver/Library/Application\ Support/Plex\ Media\ Server/Plug-ins/ComicReader.bundle
git pull
printf "\n PlexRequestChannel:"
cd /var/lib/plexmediaserver/Library/Application\ Support/Plex\ Media\ Server/Plug-ins/PlexRequestChannel.bundle
git pull
printf "\n Sub-Zero:"
cd /var/lib/plexmediaserver/Library/Application\ Support/Plex\ Media\ Server/Plug-ins/
rm -rf Sub-Zero.bundle
git clone https://github.com/pannal/Sub-Zero.bundle
/usr/sbin/service plexmediaserver restart
printf "\n WebTools:"
cd /var/lib/plexmediaserver/Library/Application\ Support/Plex\ Media\ Server/Plug-ins/WebTools.bundle
git pull
printf "\n Groovy:"
cd /opt/groovy
git pull
printf "\n NZBhydra:"
cd /opt/nzbhydra
git pull
printf "\n LazyLibrarian:"
cd /opt/LazyLibrarian
git reset --hard
git pull
printf "\n Plexupdate:"
cd /opt/plexupdate
git pull
printf "\n Cleanup:"
rm /usr/share/nginx/html/setup/setup.sh 2> /dev/null
printf "\n hotfixes:"
/sbin/ethtool -K eth0 gso off gro off tso off
service home-assistant restart
printf "\n Set Version"
version=$(crudini --get /usr/share/nginx/html/setup/config.ini custom custom1)
sed -i 's/Version.*/Version '$version'<\/span>/' /usr/share/nginx/html/openflixr/index.html

## User script
bash /opt/openflixr/userscript.sh

## Update OpenFLIXR Online
updateopenflixr
